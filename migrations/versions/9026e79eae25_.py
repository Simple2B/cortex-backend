"""empty message

Revision ID: 9026e79eae25
Revises: 588fee996f3b
Create Date: 2021-12-02 09:19:10.035992

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "9026e79eae25"
down_revision = "588fee996f3b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "clients",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(length=64), nullable=False),
        sa.Column("last_name", sa.String(length=64), nullable=False),
        sa.Column("birthday", sa.Date(), nullable=True),
        sa.Column("address", sa.String(length=128), nullable=True),
        sa.Column("city", sa.String(length=64), nullable=True),
        sa.Column("state", sa.String(length=64), nullable=True),
        sa.Column("zip", sa.Integer(), nullable=True),
        sa.Column("phone", sa.String(length=32), nullable=True),
        sa.Column("email", sa.String(length=128), nullable=True),
        sa.Column("referring", sa.String(length=128), nullable=True),
        sa.Column("medications", sa.String(length=128), nullable=True),
        sa.Column("covid_tested_positive", sa.String(), nullable=True),
        sa.Column("covid_vaccine", sa.String(), nullable=True),
        sa.Column("stressful_level", sa.Integer(), nullable=True),
        sa.Column("consent_minor_child", sa.Boolean(), nullable=True),
        sa.Column("consent_diagnostic_procedures", sa.Boolean(), nullable=True),
        sa.Column("api_key", sa.String(length=36), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_clients_email"), "clients", ["email"], unique=True)
    op.create_index(op.f("ix_clients_id"), "clients", ["id"], unique=False)
    op.create_index(op.f("ix_clients_phone"), "clients", ["phone"], unique=True)
    op.create_table(
        "conditions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_conditions_id"), "conditions", ["id"], unique=False)
    op.create_table(
        "diseases",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_diseases_id"), "diseases", ["id"], unique=False)
    op.create_table(
        "doctors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(length=64), nullable=True),
        sa.Column("last_name", sa.String(length=64), nullable=True),
        sa.Column("email", sa.String(length=128), nullable=True),
        sa.Column("email_approved", sa.Boolean(), nullable=True),
        sa.Column("hash_password", sa.String(length=128), nullable=True),
        sa.Column("role", sa.Enum("Admin", "Doctor", name="doctorrole"), nullable=True),
        sa.Column("api_key", sa.String(length=36), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_doctors_email"), "doctors", ["email"], unique=True)
    op.create_index(op.f("ix_doctors_id"), "doctors", ["id"], unique=False)
    op.create_table(
        "careplans",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=True),
        sa.Column("start_time", sa.DateTime(), nullable=True),
        sa.Column("end_time", sa.DateTime(), nullable=True),
        sa.Column("care_plan", sa.String(length=128), nullable=True),
        sa.Column("frequency", sa.String(length=128), nullable=True),
        sa.Column("progress_date", sa.DateTime(), nullable=True),
        sa.Column("client_id", sa.Integer(), nullable=True),
        sa.Column("doctor_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["clients.id"],
        ),
        sa.ForeignKeyConstraint(
            ["doctor_id"],
            ["doctors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_careplans_id"), "careplans", ["id"], unique=False)
    op.create_table(
        "client_conditions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("client_id", sa.Integer(), nullable=True),
        sa.Column("condition_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["clients.id"],
        ),
        sa.ForeignKeyConstraint(
            ["condition_id"],
            ["conditions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_client_conditions_id"), "client_conditions", ["id"], unique=False
    )
    op.create_table(
        "client_diseases",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("client_id", sa.Integer(), nullable=True),
        sa.Column("disease_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["clients.id"],
        ),
        sa.ForeignKeyConstraint(
            ["disease_id"],
            ["diseases.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_client_diseases_id"), "client_diseases", ["id"], unique=False
    )
    op.create_table(
        "info_care_plans",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("care_plan", sa.String(length=128), nullable=True),
        sa.Column("doctor_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["doctor_id"],
            ["doctors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_info_care_plans_id"), "info_care_plans", ["id"], unique=False
    )
    op.create_table(
        "info_frequencies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("frequency", sa.String(length=128), nullable=True),
        sa.Column("doctor_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["doctor_id"],
            ["doctors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_info_frequencies_id"), "info_frequencies", ["id"], unique=False
    )
    op.create_table(
        "receptions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=True),
        sa.Column("doctor_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["doctor_id"],
            ["doctors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_receptions_id"), "receptions", ["id"], unique=False)
    op.create_table(
        "visits",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=True),
        sa.Column("start_time", sa.DateTime(), nullable=True),
        sa.Column("end_time", sa.DateTime(), nullable=True),
        sa.Column("rougue_mode", sa.Boolean(), nullable=True),
        sa.Column("client_id", sa.Integer(), nullable=True),
        sa.Column("doctor_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["clients.id"],
        ),
        sa.ForeignKeyConstraint(
            ["doctor_id"],
            ["doctors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_visits_id"), "visits", ["id"], unique=False)
    op.create_table(
        "notes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=True),
        sa.Column("notes", sa.String(length=128), nullable=True),
        sa.Column("client_id", sa.Integer(), nullable=True),
        sa.Column("doctor_id", sa.Integer(), nullable=True),
        sa.Column("visit_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["clients.id"],
        ),
        sa.ForeignKeyConstraint(
            ["doctor_id"],
            ["doctors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["visit_id"],
            ["visits.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_notes_id"), "notes", ["id"], unique=False)
    op.create_table(
        "queue_members",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("place_in_queue", sa.Integer(), nullable=True),
        sa.Column("canceled", sa.Boolean(), nullable=True),
        sa.Column("client_id", sa.Integer(), nullable=True),
        sa.Column("visit_id", sa.Integer(), nullable=True),
        sa.Column("reception_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["clients.id"],
        ),
        sa.ForeignKeyConstraint(
            ["reception_id"],
            ["receptions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_queue_members_id"), "queue_members", ["id"], unique=False)
    op.create_table(
        "tests",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=True),
        sa.Column("care_plan_id", sa.Integer(), nullable=True),
        sa.Column("client_id", sa.Integer(), nullable=True),
        sa.Column("doctor_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["care_plan_id"],
            ["careplans.id"],
        ),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["clients.id"],
        ),
        sa.ForeignKeyConstraint(
            ["doctor_id"],
            ["doctors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tests_id"), "tests", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_tests_id"), table_name="tests")
    op.drop_table("tests")
    op.drop_index(op.f("ix_queue_members_id"), table_name="queue_members")
    op.drop_table("queue_members")
    op.drop_index(op.f("ix_notes_id"), table_name="notes")
    op.drop_table("notes")
    op.drop_index(op.f("ix_visits_id"), table_name="visits")
    op.drop_table("visits")
    op.drop_index(op.f("ix_receptions_id"), table_name="receptions")
    op.drop_table("receptions")
    op.drop_index(op.f("ix_info_frequencies_id"), table_name="info_frequencies")
    op.drop_table("info_frequencies")
    op.drop_index(op.f("ix_info_care_plans_id"), table_name="info_care_plans")
    op.drop_table("info_care_plans")
    op.drop_index(op.f("ix_client_diseases_id"), table_name="client_diseases")
    op.drop_table("client_diseases")
    op.drop_index(op.f("ix_client_conditions_id"), table_name="client_conditions")
    op.drop_table("client_conditions")
    op.drop_index(op.f("ix_careplans_id"), table_name="careplans")
    op.drop_table("careplans")
    op.drop_index(op.f("ix_doctors_id"), table_name="doctors")
    op.drop_index(op.f("ix_doctors_email"), table_name="doctors")
    op.drop_table("doctors")
    op.drop_index(op.f("ix_diseases_id"), table_name="diseases")
    op.drop_table("diseases")
    op.drop_index(op.f("ix_conditions_id"), table_name="conditions")
    op.drop_table("conditions")
    op.drop_index(op.f("ix_clients_phone"), table_name="clients")
    op.drop_index(op.f("ix_clients_id"), table_name="clients")
    op.drop_index(op.f("ix_clients_email"), table_name="clients")
    op.drop_table("clients")
    # ### end Alembic commands ###
